{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/Table/Table.tsx","api.ts","components/NoPeople/NoPeople.tsx","components/PeopleError/PeopleError.tsx","components/PeopleFilters/PeopleFilters.tsx","components/PeoplePage/PeoplePage.tsx","components/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","PersonLink","person","to","slug","classNames","sex","name","Table","people","useParams","parent","parentName","find","pPerson","useSearchParams","searchParams","sort","get","order","sortToggle","sortType","params","URLSearchParams","set","toString","delete","search","cn","map","selected","born","died","motherName","fatherName","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","NoPeople","PeopleError","PeopleFilters","setSearchParams","query","centuries","getAll","handleSex","gender","handleCenturies","century","newCenturies","includes","filter","cent","forEach","cen","append","value","type","placeholder","onChange","event","ch","check","handleQuery","target","length","clear","PeoplePage","useState","loader","setLoader","setPeople","error","setError","useEffect","getPeople","serverPeople","catch","finally","displayedPeople","filteredPeople","Math","ceil","validQuery","toLocaleLowerCase","trim","person1","person2","localeCompare","getfilteredPeople","PageNotFound","App","getLinkClass","isActive","role","path","element","replace","createRoot","document","getElementById","render"],"mappings":"yQAAaA,EAAW,WACtB,OACE,oBAAIC,UAAU,QAAd,sBAEH,E,qBCFYC,G,MAAS,kBACpB,qBAAKD,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCMTE,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5C,OACE,cAAC,IAAD,CACEC,GAAE,oBAAQD,QAAR,IAAQA,OAAR,EAAQA,EAAQE,MAClBL,UAAWM,IAAW,CAAE,kBAAmC,OAAV,OAANH,QAAM,IAANA,OAAA,EAAAA,EAAQI,OAFrD,gBAIGJ,QAJH,IAIGA,OAJH,EAIGA,EAAQK,MAId,ECPYC,EAAyB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC/BL,EAASM,cAATN,KAEFO,EAAS,SAACC,GACd,cAAOH,QAAP,IAAOA,OAAP,EAAOA,EAAQI,MAAK,SAAAC,GAAO,OAAIA,EAAQP,OAASK,CAArB,GAC5B,EAED,EAAuBG,cAAhBC,EAAP,oBAEMC,EAAOD,EAAaE,IAAI,SAAW,GACnCC,EAAQH,EAAaE,IAAI,UAAY,GAErCE,EAAa,SAACC,GAClB,IAAMC,EAAS,IAAIC,gBAAgBP,GAEnC,OAAIC,IAASI,GACXC,EAAOE,IAAI,OAAQH,GAEZC,EAAOG,YAGZR,IAASI,GAAsB,SAAVF,GACvBG,EAAOI,OAAO,QACdJ,EAAOI,OAAO,SAEPJ,EAAOG,aAGhBH,EAAOE,IAAI,OAAQH,GACnBC,EAAOE,IAAI,QAAS,QAEbF,EAAOG,WACf,EAED,OACE,wBACE,UAAQ,cACR1B,UAAU,uDAFZ,UAIE,gCACE,+BACE,6BACE,uBAAMA,UAAU,8BAAhB,iBAEE,cAAC,IAAD,CAAMI,GAAI,CAAEwB,OAAQP,EAAW,SAA/B,SACE,sBAAMrB,UAAU,OAAhB,SACE,mBAAGA,UAAW6B,IACZ,MACA,CACE,UAAoB,SAATX,EACX,eAA0B,SAATA,GAA6B,SAAVE,EACpC,aAAuB,SAATF,GAA6B,SAAVE,eAQ7C,6BACE,uBAAMpB,UAAU,8BAAhB,gBAEE,cAAC,IAAD,CAAMI,GAAI,CAAEwB,OAAQP,EAAW,QAA/B,SACE,sBAAMrB,UAAU,OAAhB,SACE,mBAAGA,UAAW6B,IACZ,MACA,CACE,UAAoB,QAATX,EACX,eAA0B,QAATA,GAA4B,SAAVE,EACnC,aAAuB,QAATF,GAA4B,SAAVE,eAQ5C,6BACE,uBAAMpB,UAAU,8BAAhB,iBAEE,cAAC,IAAD,CAAMI,GAAI,CAAEwB,OAAQP,EAAW,SAA/B,SACE,sBAAMrB,UAAU,OAAhB,SACE,mBAAGA,UAAW6B,IACZ,MACA,CACE,UAAoB,SAATX,EACX,eAA0B,SAATA,GAA6B,SAAVE,EACpC,aAAuB,SAATF,GAA6B,SAAVE,eAQ7C,6BACE,uBAAMpB,UAAU,8BAAhB,iBAEE,cAAC,IAAD,CAAMI,GAAI,CAAEwB,OAAQP,EAAW,SAA/B,SACE,sBAAMrB,UAAU,OAAhB,SACE,mBAAGA,UAAW6B,IACZ,MACA,CACE,UAAoB,SAATX,EACX,eAA0B,SAATA,GAA6B,SAAVE,EACpC,aAAuB,SAATF,GAA6B,SAAVE,eAQ7C,wCACA,6CAGJ,uCACGV,QADH,IACGA,OADH,EACGA,EAAQoB,KAAI,SAAA3B,GACX,IAAM4B,EAAW5B,EAAOE,OAASA,EAEjC,OAEE,qBACE,UAAQ,SAERL,UAAW6B,IAAG,CACZ,yBAA0BE,IAJ9B,UAOE,6BACE,cAAC,EAAD,CAAY5B,OAAQA,MAGtB,6BAAKA,EAAOI,MACZ,6BAAKJ,EAAO6B,OACZ,6BAAK7B,EAAO8B,OACZ,6BAEIrB,EAAOT,EAAO+B,YACT,cAAC,EAAD,CAAY/B,OAAQS,EAAOT,EAAO+B,cAClC,4BAAI/B,EAAO+B,YAAc,QAGlC,6BAEItB,EAAOT,EAAOgC,YACT,cAAC,EAAD,CAAYhC,OAAQS,EAAOT,EAAOgC,cAClC,4BAAIhC,EAAOgC,YAAc,UAvB7BhC,EAAOE,KA6BjB,QAKR,E,cCvKK+B,EAAU,oEAEhB,SAASC,EAAKC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,GAC3B,C,sDAEM,iHAEED,EAAK,KACTK,MAAK,kBAAMC,MAAMP,EAAZ,IACLM,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,KAJX,4C,sBCTA,IAAMC,EAAW,WACtB,OACE,mBAAG,UAAQ,kBAAX,8CAIH,ECNYC,EAAc,WACzB,OACE,mBAAG,UAAQ,qBAAqB/C,UAAU,kBAA1C,iCAIH,ECHYgD,EAAgB,WAC3B,IACA,EAAwChC,cAAxC,mBAAOC,EAAP,KAAqBgC,EAArB,KACMC,EAAQjC,EAAaE,IAAI,UAAY,GACrCZ,EAAMU,EAAaE,IAAI,QAAU,MACjCgC,EAAYlC,EAAamC,OAAO,cAAgB,GAgBhDC,EAAY,SAACC,GACjB,IAAM/B,EAAS,IAAIC,gBAAgBP,GAOnC,OALAM,EAAOE,IAAI,MAAO6B,GACH,QAAXA,GACF/B,EAAOI,OAAO,OAGTJ,EAAOG,UACf,EAEK6B,EAAkB,SAACC,GACvB,IAAMjC,EAAS,IAAIC,gBAAgBP,GAE7BwC,EAAeN,EAAUO,SAASF,EAAQ9B,YAC5CyB,EAAUQ,QAAO,SAAAC,GAAI,OAAIA,IAASJ,EAAQ9B,UAArB,IADJ,sBAEbyB,GAFa,CAEFK,IAOnB,OALAjC,EAAOI,OAAO,aACE,KAAZ6B,GACFC,EAAaI,SAAQ,SAAAC,GAAG,OAAIvC,EAAOwC,OAAO,YAAaD,EAAIpC,WAAnC,IAGnBH,EAAOG,UACf,EAYD,OACE,sBAAK1B,UAAU,QAAf,UACE,mBAAGA,UAAU,gBAAb,qBAEA,oBAAGA,UAAU,aAAa,UAAQ,YAAlC,UACE,cAAC,IAAD,CACEA,UAAWM,IAAW,CAAE,YAAqB,QAARC,IACrCH,GAAI,CAAEwB,OAAQyB,EAAU,QAF1B,iBAMA,cAAC,IAAD,CACErD,UAAWM,IAAW,CAAE,YAAqB,MAARC,IACrCH,GAAI,CAAEwB,OAAQyB,EAAU,MAF1B,kBAOA,cAAC,IAAD,CACErD,UAAWM,IAAW,CAAE,YAAqB,MAARC,IACrCH,GAAI,CAAEwB,OAAQyB,EAAU,MAF1B,uBAQF,qBAAKrD,UAAU,cAAf,SACE,oBAAGA,UAAU,yBAAb,UACE,uBACE,UAAQ,aACRgE,MAAOd,EACPe,KAAK,SACLjE,UAAU,QACVkE,YAAY,SACZC,SAAU,SAACC,GAAD,OApFA,SAACC,GACnB,IAAM9C,EAAS,IAAIC,gBAAgBP,GAEnCM,EAAOE,IAAI,QAAS4C,GAEpB,IAAMC,EAAiBD,EAEvBpB,EAAgB1B,GACX+C,IACH/C,EAAOI,OAAO,SACdsB,EAAgB1B,GAEnB,CAwE8BgD,CAAYH,EAAMI,OAAOR,MAApC,IAGZ,sBAAMhE,UAAU,eAAhB,SACE,mBAAGA,UAAU,gBAAgB,cAAY,gBAM/C,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,iCAAiC,UAAQ,gBAAxD,UACE,qBAAKA,UAAU,aAAf,SAtGc,CAAC,GAAI,GAAI,GAAI,GAAI,IAwGd8B,KAAI,SAAA0B,GAAO,OACxB,cAAC,IAAD,CACEpD,GAAI,CAAEwB,OAAQ2B,EAAgBC,EAAQ9B,aAEtC,UAAQ,UACR1B,UAAWM,IACT,cAAe,CACb,UAAW6C,EAAUO,SAASF,EAAQ9B,cAN5C,SAUG8B,GARIA,EAHiB,MAiB5B,qBAAKxD,UAAU,mBAAf,SACE,cAAC,IAAD,CACE,UAAQ,aACRA,UAAWM,IACT,oBAAqB,CAAE,cAAe6C,EAAUsB,SAElDrE,GAAI,CAAEwB,OAAQ2B,EAAgB,KALhC,wBAaN,qBAAKvD,UAAU,cAAf,SACE,cAAC,IAAD,CACEA,UAAU,0CACVI,GAAI,CAAEwB,OA5FA,WACZ,IAAML,EAAS,IAAIC,gBAAgBP,GAMnC,OAJAM,EAAOI,OAAO,OACdJ,EAAOI,OAAO,aACdJ,EAAOI,OAAO,SAEPJ,EAAOG,UACf,CAoFqBgD,IAFhB,mCASP,EC1IYC,EAAa,WACxB,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAmB,IAA/C,mBAAOlE,EAAP,KAAeqE,EAAf,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAAuBjE,cAAhBC,EAAP,oBAEMkC,EAAYlC,EAAamC,OAAO,cAAgB,GAChD7C,EAAMU,EAAaE,IAAI,QAAU,MACjC+B,EAAQjC,EAAaE,IAAI,UAAY,GACrCD,EAAOD,EAAaE,IAAI,SAAW,GACnCC,EAAQH,EAAaE,IAAI,UAAY,GAE3C+D,qBAAU,WACRJ,GAAU,GJfP,WAAP,+BIgBIK,GACGzC,MAAK,SAAA0C,GACJL,EAAUK,GACVH,GAAS,EACV,IACAI,OAAM,kBAAMJ,GAAS,EAAf,IAAsBK,SAAQ,kBAAMR,GAAU,EAAhB,GACxC,GAAE,IAEH,IAkDMS,EAlDoB,WACxB,IAAIC,EAAc,YAAO9E,GAczB,GAZIyC,EAAUsB,SACZe,EAAiBA,EAAe7B,QAC9B,SAAAxD,GAAM,OAAIgD,EAAUO,SAClB+B,KAAKC,KAAKvF,EAAO6B,KAAO,KAAKN,WADzB,KAME,QAARnB,IACFiF,EAAiBA,EAAe7B,QAAO,SAAAxD,GAAM,OAAIA,EAAOI,MAAQA,CAAnB,KAG3C2C,EAAO,CACT,IAAMyC,EAAazC,EAAM0C,oBAAoBC,OAE7CL,EAAiBA,EAAe7B,QAC9B,SAACxD,GAAD,eAAYA,EAAOK,KAAKoF,oBAAoBlC,SAASiC,KAAzC,UACPxF,EAAOgC,kBADA,aACP,EAAmByD,oBAAoBlC,SAASiC,MADzC,UAEPxF,EAAO+B,kBAFA,aAEP,EAAmB0D,oBAAoBlC,SAASiC,GAFrD,GAIH,CAED,GAAIzE,EACF,OAAQA,GACN,IAAK,OACL,IAAK,MACHsE,EAAiBA,EAAetE,MAAK,SAAC4E,EAASC,GAC7C,MAAkB,SAAV3E,EACJ2E,EAAQ7E,GAAM8E,cAAcF,EAAQ5E,IACpC4E,EAAQ5E,GAAM8E,cAAcD,EAAQ7E,GACzC,IACD,MACF,IAAK,OACL,IAAK,OACHsE,EAAiBA,EAAetE,MAAK,SAAC4E,EAASC,GAC7C,MAAkB,SAAV3E,EACJ2E,EAAQ7E,GAAQ4E,EAAQ5E,GACxB4E,EAAQ5E,GAAQ6E,EAAQ7E,EAC7B,IAMP,OAAOsE,CACR,CAEuBS,GAExB,OACE,qCACE,oBAAIjG,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,mDAAf,UACE,qBAAKA,UAAU,uCAAf,UACI6E,GAAW,cAAC,EAAD,MAEf,qBAAK7E,UAAU,SAAf,SACE,sBAAKA,UAAU,sBAAf,UACG6E,GAAW,cAAC,EAAD,IACQ,KAAb,OAANnE,QAAM,IAANA,OAAA,EAAAA,EAAQ+D,UAA0B,IAAVO,IAAoBH,GAAW,cAAC,EAAD,IACvDG,GAAU,cAAC,EAAD,KACA,IAAVA,IAAA,OAAmBtE,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAQ+D,UAAWI,GAAW,cAAC,EAAD,CAAOnE,OAAQ6E,gBAQ9E,EC1GYW,EAAe,kBAC1B,oBAAIlG,UAAU,QAAd,2BAD0B,ECWfmG,EAAM,WACjB,IAAMC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAyC/F,IAAW,cAAe,CAAE,8BAA+B+F,GAApG,EAErB,OACE,sBAAK,UAAQ,MAAb,UACE,qBACE,UAAQ,MACRrG,UAAU,iCACVsG,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKtG,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAASI,GAAG,IAAIJ,UAAWoG,EAA3B,kBAIA,cAAC,IAAD,CAAShG,GAAG,UAAUJ,UAAWoG,EAAjC,2BAON,sBAAMpG,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SAIE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuG,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUpG,GAAG,IAAIqG,SAAO,MACrD,cAAC,IAAD,CAAOF,KAAK,SAAZ,SACE,cAAC,IAAD,CAAOA,KAAK,SAASC,QAAS,cAAC,EAAD,QAEhC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eAMpC,EC5CDE,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.08a4f092.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person | undefined\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`../${person?.slug}`}\n      className={classNames({ 'has-text-danger': person?.sex === 'f' })}\n    >\n      {person?.name}\n    </Link>\n\n  );\n};\n","import { Link, useParams, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n\n  people: Person[] | undefined\n\n}\n\nexport const Table: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  const parent = (parentName: string | null) => {\n    return people?.find(pPerson => pPerson.name === parentName);\n  };\n\n  const [searchParams] = useSearchParams();\n\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  const sortToggle = (sortType: string) => {\n    const params = new URLSearchParams(searchParams);\n\n    if (sort !== sortType) {\n      params.set('sort', sortType);\n\n      return params.toString();\n    }\n\n    if (sort === sortType && order === 'desc') {\n      params.delete('sort');\n      params.delete('order');\n\n      return params.toString();\n    }\n\n    params.set('sort', sortType);\n    params.set('order', 'desc');\n\n    return params.toString();\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <Link to={{ search: sortToggle('name') }}>\n                <span className=\"icon\">\n                  <i className={cn(\n                    'fas',\n                    {\n                      'fa-sort': sort !== 'name',\n                      'fa-sort-down': (sort === 'name' && order === 'desc'),\n                      'fa-sort-up': sort === 'name' && order !== 'desc',\n                    },\n                  )}\n                  />\n                </span>\n              </Link>\n            </span>\n          </th>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <Link to={{ search: sortToggle('sex') }}>\n                <span className=\"icon\">\n                  <i className={cn(\n                    'fas',\n                    {\n                      'fa-sort': sort !== 'sex',\n                      'fa-sort-down': (sort === 'sex' && order === 'desc'),\n                      'fa-sort-up': sort === 'sex' && order !== 'desc',\n                    },\n                  )}\n                  />\n                </span>\n              </Link>\n            </span>\n          </th>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <Link to={{ search: sortToggle('born') }}>\n                <span className=\"icon\">\n                  <i className={cn(\n                    'fas',\n                    {\n                      'fa-sort': sort !== 'born',\n                      'fa-sort-down': (sort === 'born' && order === 'desc'),\n                      'fa-sort-up': sort === 'born' && order !== 'desc',\n                    },\n                  )}\n                  />\n                </span>\n              </Link>\n            </span>\n          </th>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <Link to={{ search: sortToggle('died') }}>\n                <span className=\"icon\">\n                  <i className={cn(\n                    'fas',\n                    {\n                      'fa-sort': sort !== 'died',\n                      'fa-sort-down': (sort === 'died' && order === 'desc'),\n                      'fa-sort-up': sort === 'died' && order !== 'desc',\n                    },\n                  )}\n                  />\n                </span>\n              </Link>\n            </span>\n          </th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people?.map(person => {\n          const selected = person.slug === slug;\n\n          return (\n\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={cn({\n                'has-background-warning': selected,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {\n                  parent(person.motherName)\n                    ? (<PersonLink person={parent(person.motherName)} />)\n                    : (<p>{person.motherName || '-'}</p>)\n                }\n              </td>\n              <td>\n                {\n                  parent(person.fatherName)\n                    ? (<PersonLink person={parent(person.fatherName)} />)\n                    : (<p>{person.fatherName || '-'}</p>)\n                }\n              </td>\n            </tr>\n\n          );\n        })}\n      </tbody>\n    </table>\n\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export const NoPeople = () => {\n  return (\n    <p data-cy=\"noPeopleMessage\">\n      There are no people on the server\n    </p>\n  );\n};\n","export const PeopleError = () => {\n  return (\n    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n      Something went wrong\n    </p>\n  );\n};\n","import { Link, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const PeopleFilters = () => {\n  const centuriesList = [16, 17, 18, 19, 20];\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || 'all';\n  const centuries = searchParams.getAll('centuries') || [];\n\n  const handleQuery = (ch: string) => {\n    const params = new URLSearchParams(searchParams);\n\n    params.set('query', ch);\n\n    const check = { query: ch };\n\n    setSearchParams(params);\n    if (!check.query) {\n      params.delete('query');\n      setSearchParams(params);\n    }\n  };\n\n  const handleSex = (gender: string) => {\n    const params = new URLSearchParams(searchParams);\n\n    params.set('sex', gender);\n    if (gender === 'all') {\n      params.delete('sex');\n    }\n\n    return params.toString();\n  };\n\n  const handleCenturies = (century: string) => {\n    const params = new URLSearchParams(searchParams);\n\n    const newCenturies = centuries.includes(century.toString())\n      ? centuries.filter(cent => cent !== century.toString())\n      : [...centuries, century];\n\n    params.delete('centuries');\n    if (century !== '') {\n      newCenturies.forEach(cen => params.append('centuries', cen.toString()));\n    }\n\n    return params.toString();\n  };\n\n  const clear = () => {\n    const params = new URLSearchParams(searchParams);\n\n    params.delete('sex');\n    params.delete('centuries');\n    params.delete('query');\n\n    return params.toString();\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <Link\n          className={classNames({ 'is-active': sex === 'all' })}\n          to={{ search: handleSex('all') }}\n        >\n          All\n        </Link>\n        <Link\n          className={classNames({ 'is-active': sex === 'm' })}\n          to={{ search: handleSex('m') }}\n        >\n          Male\n        </Link>\n\n        <Link\n          className={classNames({ 'is-active': sex === 'f' })}\n          to={{ search: handleSex('f') }}\n        >\n          Female\n        </Link>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            value={query}\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            onChange={(event) => handleQuery(event.target.value)}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n\n            {centuriesList.map(century => (\n              <Link\n                to={{ search: handleCenturies(century.toString()) }}\n                key={century}\n                data-cy=\"century\"\n                className={classNames(\n                  'button mr-1', {\n                    'is-info': centuries.includes(century.toString()),\n                  },\n                )}\n              >\n                {century}\n              </Link>\n\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className={classNames(\n                'button is-success', { 'is-outlined': centuries.length },\n              )}\n              to={{ search: handleCenturies('') }}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          className=\"button is-link is-outlined is-fullwidth\"\n          to={{ search: clear() }}\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { Table } from '../Table/Table';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { NoPeople } from '../NoPeople/NoPeople';\nimport { PeopleError } from '../PeopleError/PeopleError';\nimport { PeopleFilters } from '../PeopleFilters/PeopleFilters';\n\n/* eslint-disable max-len */\nexport const PeoplePage = () => {\n  const [loader, setLoader] = useState(true);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n  const [searchParams] = useSearchParams();\n\n  const centuries = searchParams.getAll('centuries') || [];\n  const sex = searchParams.get('sex') || 'all';\n  const query = searchParams.get('query') || '';\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  useEffect(() => {\n    setLoader(true);\n    getPeople()\n      .then(serverPeople => {\n        setPeople(serverPeople);\n        setError(false);\n      })\n      .catch(() => setError(true)).finally(() => setLoader(false));\n  }, []);\n\n  const getfilteredPeople = () => {\n    let filteredPeople = [...people];\n\n    if (centuries.length) {\n      filteredPeople = filteredPeople.filter(\n        person => centuries.includes(\n          Math.ceil(person.born / 100).toString(),\n        ),\n      );\n    }\n\n    if (sex !== 'all') {\n      filteredPeople = filteredPeople.filter(person => person.sex === sex);\n    }\n\n    if (query) {\n      const validQuery = query.toLocaleLowerCase().trim();\n\n      filteredPeople = filteredPeople.filter(\n        (person) => person.name.toLocaleLowerCase().includes(validQuery)\n          || person.fatherName?.toLocaleLowerCase().includes(validQuery)\n          || person.motherName?.toLocaleLowerCase().includes(validQuery),\n      );\n    }\n\n    if (sort) {\n      switch (sort) {\n        case 'name':\n        case 'sex':\n          filteredPeople = filteredPeople.sort((person1, person2) => {\n            return (order === 'desc')\n              ? person2[sort].localeCompare(person1[sort])\n              : person1[sort].localeCompare(person2[sort]);\n          });\n          break;\n        case 'born':\n        case 'died':\n          filteredPeople = filteredPeople.sort((person1, person2) => {\n            return (order === 'desc')\n              ? person2[sort] - person1[sort]\n              : person1[sort] - person2[sort];\n          });\n          break;\n        default:\n      }\n    }\n\n    return filteredPeople;\n  };\n\n  const displayedPeople = getfilteredPeople();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!loader && (<PeopleFilters />)}\n          </div>\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {loader && (<Loader />)}\n              {people?.length === 0 && error === false && !loader && (<NoPeople />)}\n              {error && (<PeopleError />)}\n              {error === false && people?.length && !loader && (<Table people={displayedPeople} />)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </>\n  );\n};\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","/* eslint-disable max-len */\nimport {\n  NavLink, Navigate, Route, Routes,\n}\n  from 'react-router-dom';\nimport classNames from 'classnames';\nimport './App.scss';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound/PageNotFound';\n\nexport const App = () => {\n  const getLinkClass = ({ isActive }: { isActive: boolean }) => classNames('navbar-item', { 'has-background-grey-lighter': isActive });\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink to=\"/\" className={getLinkClass}>\n              Home\n            </NavLink>\n\n            <NavLink to=\"/people\" className={getLinkClass}>\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          {/* <h1 className=\"title\">Home Page</h1>\n        <h1 className=\"title\">People Page</h1>\n        <h1 className=\"title\">Page not found</h1> */}\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\">\n              <Route path=\":slug?\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"*\" element={<PageNotFound />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}